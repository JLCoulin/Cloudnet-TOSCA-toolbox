# A.17-01.yaml
tosca_definitions_version: tosca_simple_yaml_1_3
description: myExampleNs with scaling aspects
imports:
  - etsi_nfv_sol001_nsd_types.yaml  # all of TOSCA NSD types as defined in ETSI GSÂ NFVSOL 001
  # ERROR: updated imported file names!
  - example_A.17-MyScalableNs.yaml # contains the NS node type definition.
  - example_A.17-SupportFrontEndNs.yaml # uri of the yaml file which contains the MyProviderCompany.NS.SupportFrontEndNs node type definition, this file might be included in the NSD file structure of NS_1.
  - example_A.17-FrontEnd_1_0.yaml # uri of the yaml file which contains the MyCompany.VNF.FrontEnd_1_0 node type definition, this file might be included in the NSD file structure of NS_1.
  - example_A.17-Database_1_0.yaml # uri of the yaml file which contains the MyCompany.VNF.Database_1_0 node type definition, this file might be included in the NSD file structure of NS_1.
  - example_A.17-CentralProcess_1_0.yaml # uri of the yaml file which contains the MyCompany.VNF.CentralProcess_1_0 node type definition, this file might be included in the NSD file structure of NS_1.

topology_template:
  substitution_mappings:
    node_type: MyProviderCompany.NS.MyScalableNs
    substitution_filter:
      properties:
        - flavour_id: { equal: small }
    requirements:
      virtual_link: [ FrontEnd, virtual_link_2 ]

  node_templates:
    NS_1:
#     type: MyProviderCompany.NS.MyScalableNS # ERROR: type : NS -> Ns!
      type: MyProviderCompany.NS.MyScalableNs
      interfaces:
        Nslcm:
          operations:
            instantiate:
              implementation: instantiate.workflow.yaml
            terminate:
              implementation: terminate.workflow.yaml

    FrontEnd:
      type: MyCompany.VNF.FrontEnd_1_0
      properties:
        # no property assignments needed for required properties that have a default value assigned in the node type definition, e.g. descriptor_id
        flavour_id: simple
        vnf_profile:
          instantiation_level: level_1
          min_number_of_instances: 1
          max_number_of_instances: 4
      requirements:
        - virtual_link_1: NS_VL_1
        # - virtual_link_2: # map to virtual_link requirement of the NS node

    Database:
      type: MyCompany.VNF.Database_1_0
      properties:
        # no property assignments needed for required properties that have a default value assigned in the node type definition, e.g. descriptor_id
        flavour_id: simple
        vnf_profile:
          instantiation_level: level_1
          min_number_of_instances: 1
          max_number_of_instances: 2
      requirements:
        - virtual_link_1: NS_VL_1

    CentralProcess:
      type: MyCompany.VNF.CentralProcess_1_0
      properties:
        # no property assignments needed for required properties that have a default value assigned in the node type definition, e.g. descriptor_id
        flavour_id: simple
        vnf_profile:
          instantiation_level: level_1
          min_number_of_instances: 1
          max_number_of_instances: 2
      requirements:
        - virtual_link_1: NS_VL_1

    SupportFrontEnd:
      type: MyProviderCompany.NS.SupportFrontEndNs
      properties:
        descriptor_id: c1bb0ab8-deab-4fa7-95ed-4840d70a3574
        designer: MyCompany
        version: 1.0.0.0
        name: myExample2Service
        invariant_id: aaaa-bbbb-cccc-dddd
        ns_profile:
          ns_instantiation_level: level_1
          min_number_of_instances: 0
          max_number_of_instances: 1
          flavour_id: simple
        flavour_id: simple # ERROR: property required!
      requirements:
        - virtual_link_1: NS_VL_1

    NS_VL_1:
      type: tosca.nodes.nfv.NsVirtualLink
      properties:
        connectivity_type:
          layer_protocols: [ipv4]
          flow_pattern: mesh
        vl_profile:
          max_bitrate_requirements:
             root: 1000
          min_bitrate_requirements:
             root: 1000

  policies:
    - scaling_aspects:
#       type: tosca.policies.nfv.nsScalingAspects # ERROR: typo: ns -> Ns!
        type: tosca.policies.nfv.NsScalingAspects
        properties:
          aspects:
            database:
              name: DatabaseScalingAspect
              description: This scaling aspect is used to scale the Database VNF
              ns_scale_levels:
                0:
                  description: first NS level for the database scaling aspect
                1:
                  description: second NS level for the database scaling aspect
            processor:
              name: ProcessorScalingAspect
              description: This scaling aspect is used to scale the FrontEnd and CentralProcess VNFs and the SupportFrontEnd nested NS
              ns_scale_levels:
                0:
                  description: first NS level for the processor scaling aspect
                1:
                  description: second NS level for the processor scaling aspect
                2:
                  description: second NS level for the processor scaling aspect

    - FrontEndVnfToLevelMapping:
        type: tosca.policies.nfv.VnfToLevelMapping
        properties:
#         aspects: processor # ERROR: typo: aspects -> aspect!
          aspect: processor
          number_of_instances:
            0: 1
            1: 3
            2: 4
        targets: [ FrontEnd ]

    - CentralProcessVnfToLevelMapping:
        type: tosca.policies.nfv.VnfToLevelMapping
        properties:
#         aspects: processor # ERROR: typo: aspects -> aspect!
          aspect: processor
          number_of_instances:
            0: 1
            1: 1
            2: 2
        targets: [ CentralProcess ]

    - DatabaseVnfToLevelMapping:
        type: tosca.policies.nfv.VnfToLevelMapping
        properties:
#         aspects: database # ERROR: typo: aspects -> aspect!
          aspect: database
          number_of_instances:
            0: 1
            1: 2
        targets: [ Database ]

    - SupportFrontEndNsToLevelMapping: ##BC added colon
        type: tosca.policies.nfv.NsToLevelMapping
        properties:
#         aspects: processor # ERROR: typo: aspects -> aspect!
          aspect: processor
          number_of_instances:
            0: 0
            1: 0
            2: 1
        targets: [ SupportFrontEnd ]

    - ns_instantiation_levels: ##BC added colon
#       type: tosca.policies.NsInstantiationLevels # ERROR: typo: add nfv. !
        type: tosca.policies.nfv.NsInstantiationLevels
        properties:
          ns_levels:
            instantiation_level_1:
              description: low capacity instantiation level
            instantiation_level_2:
              description: high capacity instantiation level
          default_level: instantiation_level_1

    - FrontEnd_instantiation_levels: ##BC added colon
#       type: tosca.policies.VnfToInstantiationLevelMapping # ERROR: typo: add nfv. !
        type: tosca.policies.nfv.VnfToInstantiationLevelMapping
        properties:
          number_of_instances:
            instantiation_level_1: 1
            instantiation_level_2: 3
        targets: [ FrontEnd ]

    - CentralProcess_instantiation_levels: ##BC added colon
#       type: tosca.policies.VnfToInstantiationLevelMapping # ERROR: typo: add nfv. !
        type: tosca.policies.nfv.VnfToInstantiationLevelMapping
        properties:
          number_of_instances:
            instantiation_level_1: 1
            instantiation_level_2: 1
        targets: [ CentralProcess ]

    - Database_instantiation_levels: ##BC added colon
#       type: tosca.policies.VnfToInstantiationLevelMapping # ERROR: typo: add nfv. !
        type: tosca.policies.nfv.VnfToInstantiationLevelMapping
        properties:
          number_of_instances:
            instantiation_level_1: 1
            instantiation_level_2: 1
        targets: [ Database ]

    - SupportFrontEnd_instantiation_levels: ##BC added colon
#       type: tosca.policies.NsToInstantiationLevelMapping # ERROR: typo: add nfv. !
        type: tosca.policies.nfv.NsToInstantiationLevelMapping
        properties:
          number_of_instances:
            instantiation_level_1: 0
            instantiation_level_2: 0
        targets: [ SupportFrontEnd ]
