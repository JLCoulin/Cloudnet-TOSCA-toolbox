# A.4-02.yaml
tosca_definitions_version: tosca_simple_yaml_1_3
imports:
  - etsi_nfv_sol001_vnfd_types.yaml  # all of TOSCA VNFD types as defined in ETSI GSÂ NFV-SOL 001
  - example_A.4-03.yaml
  ### add import for group types and common definitions

description: composition of Vdu.Compute, Vdu.VirtualBlockStorage and VduCp. 

topology_template:     
   substitution_mappings:
     node_type: tosca.nodes.nfv.groupVDU_C # substituted as a node type
     requirements:
        virtual_link: [ internalCpd, virtual_link ]
     capabilities:
        virtual_compute: [ vduC_compute, virtual_compute ] ### add spaces before and after brackets
        virtual_storage: [ vduC_storage, virtual_storage ] ### add spaces before and after brackets
   
   node_templates: 
     vduC_compute:   
        type: tosca.nodes.nfv.Vdu.Compute
        properties:
          name: vduC_compute
          description: vduC_compute ..
          vdu_profile:
            min_number_of_instances: 1
            max_number_of_instances: 1
          # other properties omitted here for brevity
        capabilities:             
           virtual_compute:          
             properties:
              virtual_memory:
                virtual_mem_size: 1 GB
              virtual_cpu:
                num_virtual_cpu: 1
 #       artifacts:   
 #         sw_image:             # omitted here for brevity ### has to be commented if no type and file are provided
        requirements:
          - virtual_storage: vduC_storage     
        
     vduC_storage:    
        type: tosca.nodes.nfv.Vdu.VirtualBlockStorage
        properties: ### moved left
          virtual_block_storage_data:
            size_of_storage: 2 GB
          # other properties omitted here for brevity

     internalCpd:  ### moved left
        type: tosca.nodes.nfv.VduCp
        properties:
          layer_protocols: [ ipv4 ]
 #           protocol: [ associated_layer_protocol: ipv4 ]
 #           trunk_mode: false
  # properties omitted here for brevity        
        requirements:
          # - virtual_link: 
          - virtual_binding: vduC_compute    

